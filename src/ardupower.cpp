/**
 * Ardupower - Remote controlled DC power strip
 * Copyright (C) 2017 João Brázio [joao@brazio.org]
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 *
 */

// ----------------------------------------------------------------------------
// Includes -------------------------------------------------------------------
// ----------------------------------------------------------------------------
#include "ardupower.h"


// ----------------------------------------------------------------------------
// Global control structures --------------------------------------------------
// ----------------------------------------------------------------------------
/*output_t output[NUM_OF_CHANNELS] = {
  CHANNEL01, CHANNEL02, CHANNEL03, CHANNEL04,
  CHANNEL05, CHANNEL06, CHANNEL07, CHANNEL08
};*/


// ----------------------------------------------------------------------------
// Main loop ------------------------------------------------------------------
// ----------------------------------------------------------------------------
int main(void)
{
  // --------------------------------------------------------------------------
  // Disable global interrupts ------------------------------------------------
  // --------------------------------------------------------------------------
  cli();


  // --------------------------------------------------------------------------
  // Serial port init routine -------------------------------------------------
  // --------------------------------------------------------------------------
  serial::setup();


  // --------------------------------------------------------------------------
  // ISR timer init routine ---------------------------------------------------
  // --------------------------------------------------------------------------
  timer::one::setup();


  // --------------------------------------------------------------------------
  // ADC init routine ---------------------------------------------------------
  // --------------------------------------------------------------------------
  adc::setup();


  // --------------------------------------------------------------------------
  // Enable global interrupts -------------------------------------------------
  // --------------------------------------------------------------------------
  sei();

  serial::write('a');
  serial::write('b');
  //print::string("Welcome");
  //print::eol();

  // --------------------------------------------------------------------------
  // Load settings ------------------------------------------------------------
  // --------------------------------------------------------------------------
  //eeprom::load();


  // --------------------------------------------------------------------------
  // Output init --------------------------------------------------------------
  // --------------------------------------------------------------------------
  DDRB |= 0x20; // Enable D13 as output
                // PORTB ^= 1 << 5;

  //for(uint8_t i = 0; i < NUM_OF_CHANNELS; i++) { relay::init(&output[i]); }


  // --------------------------------------------------------------------------
  // Startup ------------------------------------------------------------------
  // --------------------------------------------------------------------------
  //serial::banner();


  // --------------------------------------------------------------------------
  // Loop routine -------------------------------------------------------------
  // --------------------------------------------------------------------------
  for(;;) {
    //wdt_reset();
    //serial::process();

    adc::update(0);

    print::string("adc: ");
    print::number( adc::get() );
    print::eol();
  }

  // We should not reach this
  return 0;
}
